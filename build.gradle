buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath "com.github.johnrengelman:shadow:8.1.1"
		classpath "com.morpheusdata:morpheus-plugin-gradle:$morpheusApiVersion"
		classpath "com.bertramlabs.plugins:asset-pipeline-gradle:$assetPipelineVersion"
		classpath "com.bertramlabs.plugins:handlebars-asset-pipeline:$assetPipelineVersion"
		classpath "com.bertramlabs.plugins:sass-dart-asset-pipeline:$assetPipelineVersion"
	}
}


apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'asset-pipeline'
apply plugin: 'com.morpheusdata.morpheus-plugin-gradle'


group = 'com.morpheusdata.xen'
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

java {
	sourceCompatibility = JavaVersion.toVersion('1.11')
	targetCompatibility = JavaVersion.toVersion('1.11')
}

repositories {
	mavenLocal()
	mavenCentral()
}

configurations {
	provided
}

dependencies {
	provided "com.morpheusdata:morpheus-plugin-api:$morpheusApiVersion"

	provided "org.codehaus.groovy:groovy-all:$groovyVersion"
	implementation 'commons-beanutils:commons-beanutils:1.9.3'
	implementation "org.slf4j:slf4j-api:$slf4jVersion"
	implementation "org.slf4j:slf4j-parent:$slf4jVersion"

	// Include morpheus-core and it's dependencies
	testImplementation 'io.reactivex.rxjava3:rxjava:3.1.7'
	testImplementation "org.slf4j:slf4j-parent:$slf4jVersion"

	testImplementation "org.codehaus.groovy:groovy-all:$groovyVersion"
	testImplementation platform("org.spockframework:spock-bom:$spockVersion")
	testImplementation "org.spockframework:spock-core"
	testImplementation "org.spockframework:spock-junit4"  // you can remove this if your code does not rely on old JUnit 4 rules
}


sourceSets {
	main {
		compileClasspath += configurations.provided
	}
}

//Set plugin metadata information here that gets written into the jar
jar {
	manifest {
		attributes(
				'Plugin-Class': 'com.morpheusdata.cataloglayout.CatalogItemLayoutPlugin',
				'Plugin-Version': version,
				'Morpheus-Name': 'Catalog Item Layout Plugin'
		)
	}
}

assets {
	packagePlugin = false //leave this false for plugins

	configOptions = [
			handlebars: [
					templateRoot: 'templates',
					templatePathSeperator: '/',
					wrapTemplate: '''
	  	 (function(){
			var template = HandlebarsCustom.template, templates = HandlebarsCustom.templates = HandlebarsCustom.templates || {};
				templates['$templateName'] = template($compiledTemplate);
		}());
	  	'''
			]
	]
}


task(console, dependsOn: 'classes', type: JavaExec) {
	main = 'groovy.ui.Console'
	classpath = sourceSets.main.compileClasspath + sourceSets.main.runtimeClasspath
}

test {
	testLogging {
		exceptionFormat = 'full'
		showStandardStreams = true
	}
}
tasks.assemble.dependsOn tasks.shadowJar
